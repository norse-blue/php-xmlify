name: run-tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]
        php: [8.2]
        stability: [prefer-stable, prefer-lowest]

    name: ${{ matrix.os }}_PHP-${{ matrix.php }}_${{ matrix.dependency-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: bcmath, curl, dom, exif, fileinfo, gd, iconv, imagick, intl, libxml, mbstring, pcntl, pdo, pdo_sqlite, soap, sqlite, tidy, zip
          coverage: xdebug

      - name: Setup problem matchers for PHP
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show --direct

      - name: Run tests with coverage
        run: composer test:coverage

      - name: Upload coverage to CodeClimate
        if: "startsWith(matrix.os, 'ubuntu')"
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: ${{ github.workspace }}/build/coverage.xml:clover

      - name: Upload coverage to Codecov
        if: "startsWith(matrix.os, 'ubuntu')"
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ github.workspace }}/build/coverage.xml
          env_vars: OS,PHP
          name: ${{ matrix.os }}_PHP-${{ matrix.php }}_${{ matrix.dependency-version }}
          fail_ci_if_error: false
